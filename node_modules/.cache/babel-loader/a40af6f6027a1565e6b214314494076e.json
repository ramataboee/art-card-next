{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from \"react\";\nimport Document, { Head, Main, NextScript } from \"next/document\";\nimport { ServerStyleSheets } from \"@material-ui/styles\";\nimport theme from \"../src/theme\";\n\nvar MyDocument =\n/*#__PURE__*/\nfunction (_Document) {\n  _inherits(MyDocument, _Document);\n\n  function MyDocument() {\n    _classCallCheck(this, MyDocument);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyDocument).apply(this, arguments));\n  }\n\n  _createClass(MyDocument, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"html\", {\n        lang: \"en\"\n      }, React.createElement(Head, null, React.createElement(\"meta\", {\n        charSet: \"utf-8\"\n      }), React.createElement(\"meta\", {\n        name: \"viewport\",\n        content: \"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\"\n      }), React.createElement(\"meta\", {\n        name: \"theme-color\",\n        content: theme.palette.primary.main\n      }), React.createElement(\"link\", {\n        rel: \"stylesheet\",\n        href: \"https://fonts.googleapis.com/css?family=Montserrat&display=swap\"\n      })), React.createElement(\"body\", null, React.createElement(Main, null), React.createElement(NextScript, null)));\n    }\n  }]);\n\n  return MyDocument;\n}(Document);\n\nMyDocument.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(ctx) {\n    var sheets, originalRenderPage, initialProps;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // Resolution order\n            //\n            // On the server:\n            // 1. app.getInitialProps\n            // 2. page.getInitialProps\n            // 3. document.getInitialProps\n            // 4. app.render\n            // 5. page.render\n            // 6. document.render\n            //\n            // On the server with error:\n            // 1. document.getInitialProps\n            // 2. app.render\n            // 3. page.render\n            // 4. document.render\n            //\n            // On the client\n            // 1. app.getInitialProps\n            // 2. page.getInitialProps\n            // 3. app.render\n            // 4. page.render\n            // Render app and page and get the context of the page with collected side effects.\n            sheets = new ServerStyleSheets();\n            originalRenderPage = ctx.renderPage;\n\n            ctx.renderPage = function () {\n              return originalRenderPage({\n                enhanceApp: function enhanceApp(App) {\n                  return function (props) {\n                    return sheets.collect(React.createElement(App, props));\n                  };\n                }\n              });\n            };\n\n            _context.next = 5;\n            return Document.getInitialProps(ctx);\n\n          case 5:\n            initialProps = _context.sent;\n            return _context.abrupt(\"return\", _objectSpread({}, initialProps, {\n              // Styles fragment is rendered after the app and page rendering finish.\n              styles: React.createElement(React.Fragment, null, initialProps.styles, sheets.getStyleElement())\n            }));\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default MyDocument;","map":{"version":3,"sources":["/Users/mpho/Projects/React/nextjs/art-card-next/pages/_document.js"],"names":["React","Document","Head","Main","NextScript","ServerStyleSheets","theme","MyDocument","palette","primary","main","getInitialProps","ctx","sheets","originalRenderPage","renderPage","enhanceApp","App","props","collect","initialProps","styles","getStyleElement"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,IAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,UAA/B,QAAiD,eAAjD;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,OAAOC,KAAP,MAAkB,cAAlB;;IAEMC,U;;;;;;;;;;;;;6BACK;AACP,aACE;AAAM,QAAA,IAAI,EAAC;AAAX,SACE,oBAAC,IAAD,QACE;AAAM,QAAA,OAAO,EAAC;AAAd,QADF,EAGE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,OAAO,EAAC;AAFV,QAHF,EAQE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAED,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsBC;AAAxD,QARF,EASE;AACE,QAAA,GAAG,EAAC,YADN;AAEE,QAAA,IAAI,EAAC;AAFP,QATF,CADF,EAeE,kCACE,oBAAC,IAAD,OADF,EAEE,oBAAC,UAAD,OAFF,CAfF,CADF;AAsBD;;;;EAxBsBT,Q;;AA2BzBM,UAAU,CAACI,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA6B,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACMC,YAAAA,MAxBqB,GAwBZ,IAAIR,iBAAJ,EAxBY;AAyBrBS,YAAAA,kBAzBqB,GAyBAF,GAAG,CAACG,UAzBJ;;AA2B3BH,YAAAA,GAAG,CAACG,UAAJ,GAAiB;AAAA,qBACfD,kBAAkB,CAAC;AACjBE,gBAAAA,UAAU,EAAE,oBAAAC,GAAG;AAAA,yBAAI,UAAAC,KAAK;AAAA,2BAAIL,MAAM,CAACM,OAAP,CAAe,oBAAC,GAAD,EAASD,KAAT,CAAf,CAAJ;AAAA,mBAAT;AAAA;AADE,eAAD,CADH;AAAA,aAAjB;;AA3B2B;AAAA,mBAgCAjB,QAAQ,CAACU,eAAT,CAAyBC,GAAzB,CAhCA;;AAAA;AAgCrBQ,YAAAA,YAhCqB;AAAA,+DAmCtBA,YAnCsB;AAoCzB;AACAC,cAAAA,MAAM,EACJ,oBAAC,KAAD,CAAO,QAAP,QACGD,YAAY,CAACC,MADhB,EAEGR,MAAM,CAACS,eAAP,EAFH;AAtCuB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7B;;AAAA;AAAA;AAAA;AAAA;;AA8CA,eAAef,UAAf","sourcesContent":["import React from \"react\";\nimport Document, { Head, Main, NextScript } from \"next/document\";\nimport { ServerStyleSheets } from \"@material-ui/styles\";\nimport theme from \"../src/theme\";\n\nclass MyDocument extends Document {\n  render() {\n    return (\n      <html lang=\"en\">\n        <Head>\n          <meta charSet=\"utf-8\" />\n          {/* Use minimum-scale=1 to enable GPU rasterization */}\n          <meta\n            name=\"viewport\"\n            content=\"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\"\n          />\n          {/* PWA primary color */}\n          <meta name=\"theme-color\" content={theme.palette.primary.main} />\n          <link\n            rel=\"stylesheet\"\n            href=\"https://fonts.googleapis.com/css?family=Montserrat&display=swap\"\n          />\n        </Head>\n        <body>\n          <Main />\n          <NextScript />\n        </body>\n      </html>\n    );\n  }\n}\n\nMyDocument.getInitialProps = async ctx => {\n  // Resolution order\n  //\n  // On the server:\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. document.getInitialProps\n  // 4. app.render\n  // 5. page.render\n  // 6. document.render\n  //\n  // On the server with error:\n  // 1. document.getInitialProps\n  // 2. app.render\n  // 3. page.render\n  // 4. document.render\n  //\n  // On the client\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. app.render\n  // 4. page.render\n\n  // Render app and page and get the context of the page with collected side effects.\n  const sheets = new ServerStyleSheets();\n  const originalRenderPage = ctx.renderPage;\n\n  ctx.renderPage = () =>\n    originalRenderPage({\n      enhanceApp: App => props => sheets.collect(<App {...props} />)\n    });\n\n  const initialProps = await Document.getInitialProps(ctx);\n\n  return {\n    ...initialProps,\n    // Styles fragment is rendered after the app and page rendering finish.\n    styles: (\n      <React.Fragment>\n        {initialProps.styles}\n        {sheets.getStyleElement()}\n      </React.Fragment>\n    )\n  };\n};\n\nexport default MyDocument;\n"]},"metadata":{},"sourceType":"module"}