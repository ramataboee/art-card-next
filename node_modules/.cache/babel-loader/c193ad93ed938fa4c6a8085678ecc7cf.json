{"ast":null,"code":"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Link from \"next/link\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport MenuDrop from \"./MenuDrop\";\nimport { styleToolbar, styleRaisedButton } from \"../lib/SharedStyles\";\nvar optionsMenuCustomer = [{\n  text: \"My books\",\n  href: \"/customer/my-books\",\n  as: \"/my-books\"\n}, {\n  text: \"Log out\",\n  href: \"/logout\",\n  noPrefetch: true\n}];\nvar optionsMenuAdmin = [{\n  text: \"Admin\",\n  href: \"/admin\"\n}, {\n  text: \"Log out\",\n  href: \"/logout\",\n  noPrefetch: true\n}];\n\nfunction Header(_ref) {\n  var user = _ref.user,\n      hideHeader = _ref.hideHeader,\n      next = _ref.next;\n  return React.createElement(\"div\", {\n    style: {\n      overflow: \"hidden\",\n      position: \"relative\",\n      display: \"block\",\n      top: hideHeader ? \"-64px\" : \"0px\",\n      transition: \"top 0.5s ease-in\"\n    }\n  }, React.createElement(Toolbar, {\n    style: styleToolbar\n  }, React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"space-around\",\n    alignItems: \"center\"\n  }, React.createElement(Grid, {\n    item: true,\n    sm: 6,\n    xs: 1,\n    style: {\n      textAlign: \"left\"\n    }\n  }, !user ? React.createElement(Link, {\n    prefetch: true,\n    href: \"/\"\n  }, React.createElement(Avatar, {\n    src: \"https://storage.googleapis.com/builderbook/logo.svg\",\n    alt: \"Builder Book logo\",\n    style: {\n      margin: \"0px auto 0px 10px\",\n      cursor: \"pointer\"\n    }\n  })) : null), React.createElement(Grid, {\n    item: true,\n    sm: 2,\n    xs: 2,\n    style: {\n      textAlign: \"right\"\n    }\n  }, user && user.isAdmin && !user.isGithubConnected ? React.createElement(Hidden, {\n    smDown: true\n  }, React.createElement(\"a\", {\n    href: \"/auth/github\"\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    style: styleRaisedButton\n  }, \"Connect Github\"))) : null), React.createElement(Grid, {\n    item: true,\n    sm: 4,\n    xs: 9,\n    style: {\n      textAlign: \"right\"\n    }\n  }, user ? React.createElement(\"div\", {\n    style: {\n      whiteSpace: \"nowrap\"\n    }\n  }, !user.isAdmin ? React.createElement(MenuDrop, {\n    options: optionsMenuCustomer,\n    src: user.avatarUrl,\n    alt: user.displayName\n  }) : null, user.isAdmin ? React.createElement(MenuDrop, {\n    options: optionsMenuAdmin,\n    src: user.avatarUrl,\n    alt: user.displayName\n  }) : null) : React.createElement(\"div\", null, React.createElement(Link, {\n    prefetch: true,\n    href: \"/book\"\n  }, React.createElement(\"a\", {\n    style: {\n      margin: \"20px 20px 0px auto\"\n    }\n  }, \"Book\")), React.createElement(Link, {\n    prefetch: true,\n    href: \"/tutorials\"\n  }, React.createElement(\"a\", {\n    style: {\n      margin: \"20px 20px 0px auto\"\n    }\n  }, \"Tutorials\")), React.createElement(Link, {\n    prefetch: true,\n    href: {\n      pathname: \"/public/login\",\n      query: {\n        next: next\n      }\n    },\n    as: {\n      pathname: \"/login\",\n      query: {\n        next: next\n      }\n    }\n  }, React.createElement(\"a\", {\n    style: {\n      margin: \"0px 20px 0px auto\"\n    }\n  }, \"Log in\")))))));\n}\n\nHeader.propTypes = {\n  user: PropTypes.shape({\n    displayName: PropTypes.string,\n    email: PropTypes.string.isRequired,\n    isAdmin: PropTypes.bool,\n    avatarUrl: PropTypes.string,\n    isGithubConnected: PropTypes.bool\n  }),\n  hideHeader: PropTypes.bool,\n  next: PropTypes.string\n};\nHeader.defaultProps = {\n  user: null,\n  hideHeader: false,\n  next: \"\"\n};\nexport default Header;","map":{"version":3,"sources":["C:\\Users\\mphor\\Documents\\Projects\\React\\Web\\NEXT\\art-card\\components\\Header.js"],"names":["PropTypes","Link","Toolbar","Grid","Hidden","Button","Avatar","MenuDrop","styleToolbar","styleRaisedButton","optionsMenuCustomer","text","href","as","noPrefetch","optionsMenuAdmin","Header","user","hideHeader","next","overflow","position","display","top","transition","textAlign","margin","cursor","isAdmin","isGithubConnected","whiteSpace","avatarUrl","displayName","pathname","query","propTypes","shape","string","email","isRequired","bool","defaultProps"],"mappings":"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","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport Link from \"next/link\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nimport MenuDrop from \"./MenuDrop\";\r\n\r\nimport { styleToolbar, styleRaisedButton } from \"../lib/SharedStyles\";\r\n\r\nconst optionsMenuCustomer = [\r\n  {\r\n    text: \"My books\",\r\n    href: \"/customer/my-books\",\r\n    as: \"/my-books\"\r\n  },\r\n  {\r\n    text: \"Log out\",\r\n    href: \"/logout\",\r\n    noPrefetch: true\r\n  }\r\n];\r\n\r\nconst optionsMenuAdmin = [\r\n  {\r\n    text: \"Admin\",\r\n    href: \"/admin\"\r\n  },\r\n  {\r\n    text: \"Log out\",\r\n    href: \"/logout\",\r\n    noPrefetch: true\r\n  }\r\n];\r\n\r\nfunction Header({ user, hideHeader, next }) {\r\n  return (\r\n    <div\r\n      style={{\r\n        overflow: \"hidden\",\r\n        position: \"relative\",\r\n        display: \"block\",\r\n        top: hideHeader ? \"-64px\" : \"0px\",\r\n        transition: \"top 0.5s ease-in\"\r\n      }}\r\n    >\r\n      <Toolbar style={styleToolbar}>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-around\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item sm={6} xs={1} style={{ textAlign: \"left\" }}>\r\n            {!user ? (\r\n              <Link prefetch href=\"/\">\r\n                <Avatar\r\n                  src=\"https://storage.googleapis.com/builderbook/logo.svg\"\r\n                  alt=\"Builder Book logo\"\r\n                  style={{ margin: \"0px auto 0px 10px\", cursor: \"pointer\" }}\r\n                />\r\n              </Link>\r\n            ) : null}\r\n          </Grid>\r\n          <Grid item sm={2} xs={2} style={{ textAlign: \"right\" }}>\r\n            {user && user.isAdmin && !user.isGithubConnected ? (\r\n              <Hidden smDown>\r\n                <a href=\"/auth/github\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    style={styleRaisedButton}\r\n                  >\r\n                    Connect Github\r\n                  </Button>\r\n                </a>\r\n              </Hidden>\r\n            ) : null}\r\n          </Grid>\r\n          <Grid item sm={4} xs={9} style={{ textAlign: \"right\" }}>\r\n            {user ? (\r\n              <div style={{ whiteSpace: \"nowrap\" }}>\r\n                {!user.isAdmin ? (\r\n                  <MenuDrop\r\n                    options={optionsMenuCustomer}\r\n                    src={user.avatarUrl}\r\n                    alt={user.displayName}\r\n                  />\r\n                ) : null}\r\n                {user.isAdmin ? (\r\n                  <MenuDrop\r\n                    options={optionsMenuAdmin}\r\n                    src={user.avatarUrl}\r\n                    alt={user.displayName}\r\n                  />\r\n                ) : null}\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <Link prefetch href=\"/book\">\r\n                  <a style={{ margin: \"20px 20px 0px auto\" }}>Book</a>\r\n                </Link>\r\n                <Link prefetch href=\"/tutorials\">\r\n                  <a style={{ margin: \"20px 20px 0px auto\" }}>Tutorials</a>\r\n                </Link>\r\n                <Link\r\n                  prefetch\r\n                  href={{\r\n                    pathname: \"/public/login\",\r\n                    query: { next }\r\n                  }}\r\n                  as={{\r\n                    pathname: \"/login\",\r\n                    query: { next }\r\n                  }}\r\n                >\r\n                  <a style={{ margin: \"0px 20px 0px auto\" }}>Log in</a>\r\n                </Link>\r\n              </div>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  user: PropTypes.shape({\r\n    displayName: PropTypes.string,\r\n    email: PropTypes.string.isRequired,\r\n    isAdmin: PropTypes.bool,\r\n    avatarUrl: PropTypes.string,\r\n    isGithubConnected: PropTypes.bool\r\n  }),\r\n  hideHeader: PropTypes.bool,\r\n  next: PropTypes.string\r\n};\r\n\r\nHeader.defaultProps = {\r\n  user: null,\r\n  hideHeader: false,\r\n  next: \"\"\r\n};\r\n\r\nexport default Header;\r\n"]},"metadata":{},"sourceType":"module"}